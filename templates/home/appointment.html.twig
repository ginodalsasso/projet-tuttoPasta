{% extends 'base.html.twig' %}

{% block title %}Tutto Pasta - Rendez-Vous{% endblock %}

{% block body %}

    {# {{form(form)}} #}
    {{ form_start(form) }}
        {{ form_row(form.name) }}
        {{ form_row(form.email) }}
        {{ form_row(form.message) }}
        {{ form_widget(form.startDate)}}
        <div id="available-slots-container"></div>
        <input type="hidden" id="selectedSlot" name="selectedSlot" value="">

        {# {{ form_row(form.services) }} #}

        {# {{dump(form.services)}} #}
        {# <div id="services" data-prototype="{{ form_widget(form.services.vars.prototype)|e('html_attr') }}">
            {{ form_widget(form.services) }}
        </div> #}

        {{ form_row(form.save) }}
    {{ form_end(form) }}

    {# <div id="available-slots-container"></div> #}
{% endblock body %}

    {% block javascripts %}
        
    <script>
        /* document.addEventListener('DOMContentLoaded', function() {
            var collectionHolder = document.querySelector('#services');
                var prototype = collectionHolder.dataset.prototype;
                var index = collectionHolder.dataset.index * 1 || collectionHolder.querySelectorAll('input').length;
                var newForm = prototype.replace(/__name__/g, index);
                collectionHolder.dataset.index = index + 1;
                var newFormDiv = document.createElement('div');
                newFormDiv.innerHTML = newForm;
                collectionHolder.appendChild(newFormDiv);
            })*/
// Sélection des éléments et initialisation des variables
document.addEventListener('DOMContentLoaded', function() {
    const bookingStart = document.querySelector('#appointment_startDate');
    const availableSlotsContainer = document.getElementById('available-slots-container');
    const selectedSlotInput = document.getElementById('selectedSlot');

    bookingStart.addEventListener('change', function() {
        const selectedDate = bookingStart.value;

        fetch("{{ path('get_available_slots') }}", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({
                startDate: selectedDate
            }),
        })
        .then(response => response.json())
        .then(data => {
            if (Array.isArray(data.availableSlots)) {
                availableSlotsContainer.innerHTML = ''; // Réinitialisation des créneaux disponibles

                const allSlots = data.availableSlots[0];
                const bookedSlots = data.availableSlots[1];

                allSlots.forEach(slot => {
                    const label = document.createElement('label');
                    const radio = document.createElement('input');
                    radio.type = 'radio';
                    radio.name = 'selectedSlotRadio';
                    radio.value = slot;
                    radio.className = 'slot-radio';

                    if (bookedSlots.includes(slot)) {
                        radio.disabled = true;
                        label.classList.add('disabled-slot');
                        label.style.opacity = 0.3;
                    }

                    label.appendChild(radio);
                    label.appendChild(document.createTextNode(formatTime(slot)));
                    availableSlotsContainer.appendChild(label);

                    radio.addEventListener('change', function() {
                        selectedSlotInput.value = slot;
                    });
                });
            } else {
                console.error('Invalid data format:', data);
            }
        })
        .catch(error => {
            console.error('Error fetching available times:', error);
        });
    });

    function formatTime(dateTimeString) {
        const dateTime = new Date(dateTimeString);
        return dateTime.toLocaleTimeString('fr-FR', {
            hour: '2-digit',
            minute: '2-digit'
        });
    }
});
</script>

{% endblock %}